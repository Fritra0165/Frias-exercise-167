//Author: Travis Frias
//Course: CPT-167
//Purpose: help the user calculate a discount on a new shirt
//and print out a purchase receipt.
//CreateDate: 11/30/21

package edu.cpt167.frias.exercise6;

//import scanner
import java.util.Scanner;

//start of FriasMainClass
public class FriasMainClass {
	
	//declare and initialize class constants 
	public static final double TAX_RATE = .075;
	public static final String DISCOUNT_NAME_MEMBER = "Member";
	public static final String DISCOUNT_NAME_SENIOR = "Senior";
	public static final String DISCOUNT_NAME_NONE = "No Discount";
	public static final String DISCOUNT_NAME_QUIT = "Quit";
	public static final double DISCOUNT_RATE_MEMBER = 0.15;
	public static final double DISCOUNT_RATE_SENIOR = 0.25;
	public static final double DISCOUNT_RATE_NONE = 0.0;
	public static final String ITEM_NAME_PREMIUM = "Nike shirt";
	public static final String ITEM_NAME_SPECIAL = "Adidas shirt";
	public static final String ITEM_NAME_BASIC = "Asics Shirt";
	public static final String ITEM_NAME_RETURN = "Return to Main Menu";
	public static final double ITEM_PRICE_PREMIUM = 55.95;
	public static final double ITEM_PRICE_SPECIAL = 24.95;
	public static final double ITEM_PRICE_BASIC = 15.95;
	public static final int RESET_VALUE = 0;
	
	//start of Main method
	public static void main(String args[])
	{
		
		//initialize scanner 
		Scanner input = new Scanner (System.in);
		
		//declare and initialize variables 
		String userName = "";
		char rateSelection = ' ';
		char itemSelection = ' ';
		int howMany = 0;
		String discountName = "";
		double discountRate = 0.0;
		String itemName = "";
		double itemPrice = 0.0;
		double discountAmount = 0.0;
		double discountPrice = 0.0;
		double subTotal = 0.0;
		double tax = 0.0;
		double totalCost = 0.0;
		int memberCount = 0;
		int seniorCount = 0;
		int noDiscountCount = 0;
		double grandTotal = 0.0;
		int premiumCount = 0;
		int specialCount = 0;
		int basicCount = 0;
		double purchaseAmt = 0.0;
		
		//display welcome message
		displayWelcomeBanner();
		
		//recieve username
		userName = getUserName(input);
		
		//recieve and validate item menu
		rateSelection = validateMainMenu(input);
		
		//run while user has not quit
		while (rateSelection != 'Q')
		{
			//recieve and validate item menu
			itemSelection = validateItemMenu(input);
			
			//run while user has not return to main menu
			while (itemSelection != 'R')
			{
				//recieve and validate how many
				howMany = validateHowMany(input);
				
				//selection structure to assign a discount based on selection
				//if user chooses A
				if (rateSelection == 'A')
				{
					//assign values 
					discountName = DISCOUNT_NAME_MEMBER;
					discountRate = DISCOUNT_RATE_MEMBER;
					memberCount++;
				}//end of selection A
				//else if user chooses B
				else if (rateSelection == 'B')
				{
					//assign values
					discountName = DISCOUNT_NAME_SENIOR;
					discountRate = DISCOUNT_RATE_SENIOR;
					seniorCount++;
				}//end of selection B
				//else user chooses C
				else 
				{
					//assign values
					discountName = DISCOUNT_NAME_NONE;
					discountRate = DISCOUNT_RATE_NONE;
					noDiscountCount++;
				}//end of selection C
				//end of selection structure for discounts 
				
				//selection structure to assign a item based on selection 
				//if user chooses A
				if (itemSelection == 'A')
				{
					//assign values
					itemName = ITEM_NAME_PREMIUM;
					itemPrice = ITEM_PRICE_PREMIUM;
					premiumCount++;
				}//end of selection A
				//else if user chooses B 
				else if (itemSelection == 'B')
				{
					//assign values
					itemName = ITEM_NAME_SPECIAL;
					itemPrice = ITEM_PRICE_SPECIAL;
					specialCount++;
				}//end of selection B
				//else user chooses C
				else 
				{
					//assign values
					itemName = ITEM_NAME_BASIC;
					itemPrice = ITEM_PRICE_BASIC;
					basicCount++;
				}//end of selection C 
				//end of selection structure for items
				
				//calculate discount amount 
				discountAmount = itemPrice * discountRate;
				
				//calculate discount price 
				discountPrice = itemPrice - discountAmount;
				
				//calculate purchase amount 
				purchaseAmt = howMany * discountPrice;
				
				//calulate sub total
				subTotal = subTotal + purchaseAmt;
				
				//display item receipt 
				displayItemReceipt(itemName, itemPrice, discountName, discountRate, discountAmount, discountPrice, howMany, 
				purchaseAmt, subTotal);
				
				//modify LCV getting item menu again 
				itemSelection = validateItemMenu(input);		
			}//end of run while user has not return to main menu
			
			//calculate tax 
			tax = subTotal * TAX_RATE;
			
			//calculate total cost 
			totalCost = subTotal + tax;
			
			//calculate grand total 
			grandTotal = grandTotal + totalCost;
			
			//display order total
			displayOrderTotal(userName, subTotal, tax, totalCost);
			
			//reset the sub total
			subTotal = RESET_VALUE;
			
			//modify LCV getting discount menu again
			rateSelection = validateMainMenu(input);
		}//end of run while not quit
		
		//if grandTotal > 0.0 display final report
		if (grandTotal > 0.0)
		{
			//display final report
			displayFinalReport(memberCount, seniorCount, noDiscountCount, premiumCount, specialCount, basicCount, grandTotal);
		}//end of if to display final report 
		
		//display farewell message
		displayFarewellMessage();
		
		//close scannner
		input.close();
		
	}//end of Main method 
	
	//void method section
	//void method to display welcome banner 
	public static void displayWelcomeBanner()
	{
		System.out.println("Welcome to the Discount Calculation Program!");
		System.out.println("This program will allow the user to purchase a shirt");
		System.out.println("and help calculate the discount and tax rate.\n");
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");
	}//end of display welcome message
	
	//void method to display farwell message 
	public static void displayFarewellMessage()
	{
		System.out.println("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");
		System.out.println("Thank you for using the Discount Calculation Program!");
		System.out.println("Have a wonderful rest of your day!");
	}//end of display farewell message 
	
	//void method to display item receipt 
	public static void displayItemReceipt(String borrowedItemName, double borrowedItemPrice, String borrowedDiscountName, double borrowedDiscountRate, 
	double borrowedDiscountAmount, double borrowedDiscountPrice, int borrowedHowMany, double borrowedPurchaseAmt, double borrowedSubTotal)
	{
		//output item receipt 
		System.out.println("\n~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~");
		System.out.println("ITEM REPORT");
		System.out.println("~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~");
		System.out.printf("%-20s%-2s\n", "Item Name", borrowedItemName);
		System.out.printf("%-15s%6s%9.2f\n", "Original Price", "$", borrowedItemPrice);
		System.out.printf("%-20s%-2s\n", "Discount Type", borrowedDiscountName);
		System.out.printf("%-14s%15.1f%-2s\n", "Discount Rate", borrowedDiscountRate * 100, "%");
		System.out.printf("%-16s%5s%9.2f\n", "Discount Amount", "$", borrowedDiscountAmount);
		System.out.printf("%-17s%4s%9.2f\n", "Discounted Price", "$", borrowedDiscountPrice);
		System.out.printf("%-9s%21d\n", "Quantity", borrowedHowMany);
		System.out.printf("%-16s%5s%9.2f\n", "Purhase Amount", "$", borrowedPurchaseAmt);
		System.out.printf("%-9s%12s%9.2f\n", "Subtotal", "$", borrowedSubTotal);
		System.out.println("~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~\n");
	}//end of display item receipt
	
	//void method to display order total
	public static void displayOrderTotal(String borrowedUserName, double borrowedSubTotal, double borrowedTax, double borrowedTotalCost)
	{
		//output order total
		System.out.println("\n~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~");
		System.out.println("ORDER REPORT");
		System.out.println("~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~");
		System.out.printf("%-20s%2s\n", "User", borrowedUserName);
		System.out.printf("%-9s%12s%9.2f\n", "Subtotal", "$", borrowedSubTotal);
		System.out.printf("%-4s%17s%9.2f\n", "Tax", "$", borrowedTax);
		System.out.printf("%-11s%10s%9.2f\n", "Total Cost", "$", borrowedTotalCost);	
		System.out.println("~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~");
	}//end of order total
	
	//void method to display final report 
	public static void displayFinalReport(int borrowedMemberCount, int borrowedSeniorCount, int borrowedNoDiscountCount, int borrowedPremiumCount,
	int borrowedSpecialCount, int borrowedBasicCount, double borrowedGrandTotal)
	{
		//output final report
		System.out.println("\n~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~");
		System.out.println("FINAL REPORT");
		System.out.println("~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~");
		System.out.printf("%-25s\n", "Count of discount types: ");
		System.out.printf("%-25s%-2d\n", DISCOUNT_NAME_MEMBER, borrowedMemberCount);
		System.out.printf("%-25s%-2d\n", DISCOUNT_NAME_SENIOR, borrowedSeniorCount);
		System.out.printf("%-25s%-2d\n", DISCOUNT_NAME_NONE, borrowedNoDiscountCount);
		System.out.println("~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~");
		System.out.printf("%-25s\n", "Count of item types: ");
		System.out.printf("%-25s%-2d\n", ITEM_NAME_PREMIUM, borrowedPremiumCount);
		System.out.printf("%-25s%-2d\n", ITEM_NAME_SPECIAL, borrowedSpecialCount);
		System.out.printf("%-25s%-2d\n", ITEM_NAME_BASIC, borrowedBasicCount);
		System.out.println("~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~");
		System.out.printf("%-12s%6s%8.2f\n", "Grand Total", "$", borrowedGrandTotal);
		System.out.println("~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~\n");
	}//end of final report 
	
	//void method to display main menu
	public static void displayMainMenu()
	{
		//ouput discount menu
		System.out.println("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		System.out.println("DISCOUNT MENU");
		System.out.printf("%-8s%-7s%15.1f%-2s\n", "[A] for", DISCOUNT_NAME_MEMBER, DISCOUNT_RATE_MEMBER * 100,  "%");
		System.out.printf("%-8s%-7s%15.1f%-2s\n", "[B] for", DISCOUNT_NAME_SENIOR, DISCOUNT_RATE_SENIOR * 100,  "%");
		System.out.printf("%-8s%-12s%10.1f%-2s\n", "[C] for", DISCOUNT_NAME_NONE, DISCOUNT_RATE_NONE * 100,  "%");
		System.out.printf("%-7s%-5s\n", "[Q] to", DISCOUNT_NAME_QUIT);	
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		System.out.print("Enter your selection here: ");
	}//end of display main menu
	
	//void method to display item menu
	public static void displayItemMenu()
	{
		//output item menu
		System.out.println("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		System.out.println("ITEM MENU");
		System.out.printf("%-8s%-11s%11s%-6.2f\n", "[A] for", ITEM_NAME_PREMIUM, "$", ITEM_PRICE_PREMIUM);
		System.out.printf("%-8s%-12s%10s%-6.2f\n", "[B] for", ITEM_NAME_SPECIAL, "$", ITEM_PRICE_SPECIAL);
		System.out.printf("%-8s%-12s%10s%-6.2f\n", "[C] for", ITEM_NAME_BASIC, "$", ITEM_PRICE_BASIC);
		System.out.printf("%-7s%-23s\n", "[R] to", ITEM_NAME_RETURN);
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		System.out.print("Enter your selection here: ");
	}//end of display item menu
	
	//VR method section
	//VR method to recieve username
	public static String getUserName(Scanner borrowedInput)
	{
		//declare local variable
		String localUserName = "";
		
		//prompt user for username input
		System.out.print("Please enter your first name here: ");
		//assign input
		localUserName = borrowedInput.nextLine();
		
		//return local username
		return localUserName;
	}//end of get username
	
	//VR method to validate main menu selection
	public static char validateMainMenu(Scanner borrowedInput)
	{
		//declare all local variables
		char localSelection = ' ';
		
		//display menu and prompt for discount selection
		displayMainMenu();
		localSelection = borrowedInput.next().toUpperCase().charAt(0);
		
		//validate discount menu and modify LCV
		while (localSelection != 'A' && localSelection != 'B' && localSelection != 'C' && localSelection != 'Q')
		{
			//print error message
			System.out.println("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			System.out.println("The selection made is invalid. Please try again.");
			System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");
			
			//reprint discount menu back to the user 
			displayMainMenu();
			localSelection = borrowedInput.next().toUpperCase().charAt(0);
		}//end of main menu validation
		
		//return discount menu
		return localSelection;
	}//end of validate main menu
	
	//VR method to validate item menu selection
	public static char validateItemMenu(Scanner borrowedInput)
	{
		//declare all local variables
		char localSelection = ' ';
		
		//display menu and prompt for item selection
		displayItemMenu();
		localSelection = borrowedInput.next().toUpperCase().charAt(0);
		
		//validate item menu and modify LCV
		while (localSelection != 'A' && localSelection != 'B' && localSelection != 'C' && localSelection != 'R')
		{
			//print error message
			System.out.println("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			System.out.println("The selection made is invalid. Please try again.");
			System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");
			
			//reprint item menu back to the user
			displayItemMenu();
			localSelection = borrowedInput.next().toUpperCase().charAt(0);
		}//end of item menu validation
		
		//return item menu
		return localSelection;
	}//end of validate item menu
	
	//VR method to validate how many selection
	public static int validateHowMany(Scanner borrowedInput)
	{
		//declare local variables
		int localHowMany = 0;
		
		//prompt user for how many input 
		System.out.println("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		System.out.print("Enter a Quantity here: ");
		localHowMany = borrowedInput.nextInt();
		
		//validate how many
		while (localHowMany <= 0)
		{
			//print error message
			System.out.println("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			System.out.println("The value entered is invalid. Please try again.");
			System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");
			
			//reprint how mnay promt back to the user and modify LCV
			System.out.println("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			System.out.print("Enter a Quantity here: ");
			localHowMany = borrowedInput.nextInt();
		}//end of how many validation
		
		//return how many
		return localHowMany;
	}//end of validate how many
	
}//end of FriasMainClass
